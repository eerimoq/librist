cmake_minimum_required(VERSION 3.10)
project(librist)
set(CMAKE_C_STANDARD 99)
set(CMAKE_CXX_STANDARD 17)
IF (WIN32)
    set(CMAKE_C_FLAGS "-Wall -Drist_EXPORTS -D_GNU_SOURCE")
    IF (CMAKE_C_COMPILER_ID STREQUAL "MSVC")
        set(CMAKE_C_FLAGS ${CMAKE_C_FLAGS} " -wd4028 -wd4996 -wd5045 -wd4668 -wd4820 -wd4324")
    ENDIF()
ELSE()
    set(CMAKE_C_FLAGS "-Wall -Winvalid-pch -Wextra -Wpedantic -Werror -std=c99 -O3 -Drist_EXPORTS -Wshadow -pedantic-errors -D_GNU_SOURCE")
ENDIF()

find_package (Threads REQUIRED)

INCLUDE(CheckIncludeFiles)

CHECK_INCLUDE_FILES(stdatomic.h HAVE_STDATOMIC_H)
IF (NOT HAVE_STDATOMIC_H)
    IF (CMAKE_CXX_COMPILER_ID STREQUAL "MSVC")
        include_directories(${CMAKE_CURRENT_SOURCE_DIR}/compat/msvc)
    ENDIF (CMAKE_CXX_COMPILER_ID STREQUAL "MSVC")
ENDIF (NOT HAVE_STDATOMIC_H)

include_directories(${CMAKE_CURRENT_SOURCE_DIR}/include/)
include_directories(${CMAKE_CURRENT_SOURCE_DIR}/src/)
include_directories(${CMAKE_CURRENT_SOURCE_DIR}/contrib/)
file(GLOB base "${CMAKE_CURRENT_SOURCE_DIR}/src/*.c")
file(GLOB extra "${CMAKE_CURRENT_SOURCE_DIR}/contrib/*.c")
file(GLOB lz4 "${CMAKE_CURRENT_SOURCE_DIR}/contrib/lz4/*.c")

if(${CMAKE_SYSTEM_NAME} MATCHES "Linux")
    set(LINUX TRUE)
endif()

if (NOT LINUX)
    list(REMOVE_ITEM extra "${CMAKE_CURRENT_SOURCE_DIR}/contrib/linux-crypto.c")
endif()

add_library(rist SHARED ${base} ${extra} ${lz4})
IF (WIN32)
    target_link_libraries(rist Threads::Threads ws2_32)
ELSE()
     target_link_libraries(rist Threads::Threads)
ENDIF()
